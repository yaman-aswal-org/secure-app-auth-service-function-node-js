const jwt = require('jsonwebtoken');

const SECRET_KEY = process.env.JWT_SECRET_KEY; // Store your secret key in an environment variable

// Generating JWT
function generateToken(claims = { id }, expiresIn = '1h') {
    console.log("generateToken -- claims:", claims);
    console.log("generateToken --  expiresIn:", expiresIn);

    //Set data in Payload
    const payload = {
        ...claims
    };

    // Set token expiration
    const options = { expiresIn: expiresIn };

    // Then generate JWT Token
    return jwt.sign(payload, SECRET_KEY, options);
};

// Verification of JWT
function validateToken(token) {

    try {
        const verified = jwt.verify(token, SECRET_KEY);
        if (verified) {
            const res = {
                status: "200",
                message: "Successfully Token Verified"
            }
            return res;
        } else {
            // Access Denied
            const res = {
                status: "401",
                message: "Access Denied"
            }
            return res;
        }
    } catch (error) {
        // Access Denied
        const res = {
            status: "401",
            message: "Access Denied"
        }
        return res;
    }
};

module.exports = { generateToken, validateToken };